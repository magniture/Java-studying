<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.bilibili.dao.UserDao">

    <select id="getUserByPhone" parameterType="java.lang.String" resultType="com.imooc.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            phone = #{phone}
    </select>

    <insert id="addUser" parameterType="com.imooc.bilibili.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into
            t_user(
               phone,
               email,
               password,
               salt,
               createTime
            )values (
                #{phone},
                #{email},
                #{password},
                #{salt},
                #{createTime}
            )
    </insert>

    <insert id="addUserInfo" parameterType="com.imooc.bilibili.domain.UserInfo">
        insert into
            t_user_info(
                userId,
                nick,
                avatar,
                sign,
                gender,
                birth,
                createTime
        )values (
                #{userId},
                #{nick},
                #{avatar},
                #{sign},
                #{gender},
                #{birth},
                #{createTime}
                )
    </insert>

    <select id="getUserById" parameterType="java.lang.Long" resultType="com.imooc.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            id = #{id}
    </select>

    <select id="getUserInfoByUserId" parameterType="java.lang.Long" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            userId = #{userId}
    </select>

    <update id="updateUsers" parameterType="com.imooc.bilibili.domain.User">
        update
            t_user
        set
            <if test="phone != null and phone != '' ">
                phone = #{phone},
            </if>
            <if test="email != null and email != '' ">
                email = #{email},
            </if>
            <if test="password != null and password != '' ">
                password = #{password},
            </if>
            updateTime = #{updateTime}
        where
            id = #{id}
    </update>

    <select id="getUserByPhoneOrEmail" parameterType="java.lang.String" resultType="com.imooc.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            phone = #{phone} or email = #{email}
    </select>

    <update id="updateUserInfos" parameterType="com.imooc.bilibili.domain.UserInfo">
        update
            t_user_info
        set
            <if test="nick != null and nick != '' ">
                nick = #{nick},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="sign != null">
                sign = #{sign},
            </if>
            <if test="birth != null and birth != '' ">
                birth = #{birth},
            </if>
            <if test="gender != null and gender != '' ">
                gender = #{gender},
            </if>
            updateTime = #{updateTime}
        where
            userId = #{userId}
    </update>

    <select id="getUserInfoByUserIds" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            1=1
            <if test="userIdList != null and userIdList.size > 0">
                and userId in
                <foreach collection="userIdList" item = "userId" index="index" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
    </select>

    <select id="pageCountUserInfos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_user_info
        where
            1=1
            <if test="nick != null and nick != '' ">
                and nick like '%${nick}%'
            </if>
    </select>

    <select id="pageListUserInfos" parameterType="java.util.Map" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            1=1
            <if test="nick != null and nick != '' ">
                and nick like '%${nick}%'
            </if>
        order by id desc
        limit #{start}, #{limit}
    </select>

    <delete id="deleteRefreshToken">
        delete from
            t_refresh_token
        where
            refreshToken = #{refreshToken}
            and userId = #{userId}
    </delete>

    <delete id="deleteRefreshTokenByUserId" parameterType="java.lang.Long">
        delete from
            t_refresh_token
        where
            userId = #{userId}
    </delete>


    <insert id="addRefreshToken">
        insert into
            t_refresh_token(
                refreshToken,
                userId,
                createTime
            )values(
                #{refreshToken},
                #{userId},
                #{createTime}
            )
    </insert>

    <select id="getRefreshTokenDetail" parameterType="java.lang.String" resultType="com.imooc.bilibili.domain.RefreshTokenDetail">
        select
            *
        from
            t_refresh_token
        where
            refreshToken = #{refreshToken}
    </select>

    <select id="getRefreshTokenByUserId" parameterType="java.lang.Long" resultType="java.lang.String">
        select
            refreshToken
        from
            t_refresh_token
        where
            userId = #{userId}
    </select>

    <select id="batchGetUserInfoByUserIds" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            userId in
            <foreach collection="userIdList" item="userId" open="(" close=")" separator=",">
                #{userId}
            </foreach>
    </select>


</mapper>